name: DevSecOps CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository_owner }}/java-app
  KUBECONFIG_FILE: ${{ secrets.KUBECONFIG }}

jobs:
  say-hello:
    name: Say Hello
    runs-on: ubuntu-latest
    steps:
      - name: Hello World Action
        run: echo "Hello, DevSecOps!"

  build-artifact:
    name: Build Artifact - Maven
    runs-on: ubuntu-latest
    needs: say-hello
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
    
    - name: Build Artifact
      run: mvn clean package -DskipTests=true
    
    - name: Archive JAR
      uses: actions/upload-artifact@v4
      with:
        name: jar-artifact
        path: target/*.jar

  unit-tests:
    name: Unit Tests - JUnit and Jacoco
    runs-on: ubuntu-latest
    needs: build-artifact
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
    
    - name: Run Tests
      run: mvn test
    
    - name: Publish Test Results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: JUnit Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit
    
    - name: Generate JaCoCo Report
      run: mvn jacoco:report
    
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: target/site/jacoco/jacoco.xml
        fail_ci_if_error: false

  docker-build-push:
    name: Docker image build and push
    runs-on: ubuntu-latest
    needs: unit-tests
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
    
    - name: Build JAR for Docker
      run: mvn clean package -DskipTests=true
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max